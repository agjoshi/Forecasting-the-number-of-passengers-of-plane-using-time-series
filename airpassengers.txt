library(forecast)
data(AirPassengers)
AP <- AirPassengers
AP 
class(AP)
start(AP); end(AP); frequency(AP)
summary(AP)
plot(AP, ylab= "Passengers (1000's)")
plot(decompose(AirPassengers))
apts <- ts(AirPassengers, frequency=12)
f<- decompose(apts)
library(tseries)
adf.test(apts, alternative ="stationary", k=12)
findbest <- auto.arima(AirPassengers)
plot(forecast(findbest,h=20))
fit <- arima(AirPassengers, order=c(0, 1, 1), list(order=c(0, 1, 0), period = 12))
fit

#Compute prediction intervals of 95% confidence level for each prediction
fore <- predict(fit, n.ahead=24)
U <- fore$pred + 2*fore$se 
L <- fore$pred - 2*fore$se


# plotting
ts.plot(AirPassengers, fore$pred, U, L, col=c(1, 2, 4, 4), lty=c(1, 1, 2, 2))
library(graphics)
legend("topleft", c("Actual", "Forecast", "Error Bounds (95% prediction interval)"), 
       col=c(1, 2, 4),lty=c(1, 1, 2))


#Residual Analysis
res <- residuals(fit)
acf(res)
   pacf(res)

# Check normality using Q-Q plot
 qqnorm(residuals(fit))
   qqline(residuals(fit))

# Test for stationarity using ADF test
library(tseries)
adf.test(fit$residuals, alternative ="stationary")